#include <iostream>
#include <vector>
#include <string>
#include <limits>
using namespace std;

struct User {
    int userId;
    string name;
    string email;
};

struct Bus {
    int busId;
    string busRoute;
    string driverName;
    string from;
    string to;
    int totalSeats;
    int availableSeats;
};

struct Booking {
    int bookingId;
    int userId;
    int busId;
    int seatsBooked;
};

vector<User> users;
vector<Bus> buses;
vector<Booking> bookings;
int userIdCounter = 1, busIdCounter = 1, bookingIdCounter = 1;

void registerUser() {
    User user;
    user.userId = userIdCounter++;
    cout << "Enter name: ";
    getline(cin >> ws, user.name);
    cout << "Enter email: ";
    getline(cin, user.email);
    users.push_back(user);
    cout << "User registered successfully! User ID: " << user.userId << endl;
}

void addBus() {
    Bus bus;
    bus.busId = busIdCounter++;
    cout << "Enter the driver name: ";
    getline(cin >> ws, bus.driverName);
    cout << "Enter bus route number: ";
    getline(cin, bus.busRoute);
    cout << "Enter from: ";
    getline(cin, bus.from);
    cout << "Enter to: ";
    getline(cin, bus.to);
    cout << "Enter total seats: ";
    cin >> bus.totalSeats;
    bus.availableSeats = bus.totalSeats;
    buses.push_back(bus);
    cout << "Bus added successfully! Bus ID: " << bus.busId << endl;

    for (int i = 0; i < 70; ++i) cout << "*";
    cout << "\nDriver Name: " << bus.driverName
         << " | From: " << bus.from
         << " | To: " << bus.to
         << " | Total Seats: " << bus.totalSeats << endl;
    for (int i = 0; i < 70; ++i) cout << "*";
    cout << endl;
}

void bookTicket() {
    int userId, busId, seats;
    cout << "Enter User ID: ";
    cin >> userId;

    bool userExists = false;
    for (const User &user : users) {
        if (user.userId == userId) {
            userExists = true;
            break;
        }
    }

    if (!userExists) {
        cout << "Invalid User ID. Please register first.\n";
        return;
    }

    cout << "Enter Bus ID: ";
    cin >> busId;
    cout << "Enter number of seats to book: ";
    cin >> seats;

    for (Bus &bus : buses) {
        if (bus.busId == busId) {
            if (bus.availableSeats >= seats) {
                bus.availableSeats -= seats;
                Booking booking = {bookingIdCounter++, userId, busId, seats};
                bookings.push_back(booking);
                cout << "Booking successful! Booking ID: " << booking.bookingId << endl;
                return;
            } else {
                cout << "Not enough seats available." << endl;
                return;
            }
        }
    }
    cout << "Invalid Bus ID." << endl;
}

void cancelBooking() {
    int bookingId;
    cout << "Enter Booking ID: ";
    cin >> bookingId;

    for (auto it = bookings.begin(); it != bookings.end(); ++it) {
        if (it->bookingId == bookingId) {
            for (Bus &bus : buses) {
                if (bus.busId == it->busId) {
                    bus.availableSeats += it->seatsBooked;
                    break;
                }
            }
            bookings.erase(it);
            cout << "Booking cancelled successfully!" << endl;
            return;
        }
    }
    cout << "Invalid Booking ID." << endl;
}

void generateReport() {
    cout << "\nBooking Summary:\n";
    if (bookings.empty()) {
        cout << "No bookings yet.\n";
        return;
    }

    for (const Booking &booking : bookings) {
        cout << "Booking ID: " << booking.bookingId
             << " | User ID: " << booking.userId
             << " | Bus ID: " << booking.busId
             << " | Seats Booked: " << booking.seatsBooked << endl;
    }
}

int main() {
    int choice;
    do {
        cout << "\n========== Bus Reservation System ==========\n";
        cout << "1. Register User\n";
        cout << "2. Add Bus\n";
        cout << "3. Book Ticket\n";
        cout << "4. Cancel Booking\n";
        cout << "5. Generate Report\n";
        cout << "6. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        if (cin.fail()) {
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            cout << "Invalid input. Please enter a valid number.\n";
            continue;
        }

        switch (choice) {
            case 1: registerUser(); break;
            case 2: addBus(); break;
            case 3: bookTicket(); break;
            case 4: cancelBooking(); break;
            case 5: generateReport(); break;
            case 6: cout << "Exiting system. Goodbye!\n"; break;
            default: cout << "Invalid choice. Please try again.\n";
        }
    } while (choice != 6);

    return 0;
}
